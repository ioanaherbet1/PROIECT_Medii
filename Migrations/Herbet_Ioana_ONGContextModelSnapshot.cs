// <auto-generated />
using System;
using Herbet_Ioana_ONG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Herbet_Ioana_ONG.Migrations
{
    [DbContext(typeof(Herbet_Ioana_ONGContext))]
    partial class Herbet_Ioana_ONGContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Departament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartamentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departament");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Voluntar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Varsta")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DepartamentID");

                    b.ToTable("Voluntar");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.VoluntarCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("VoluntarID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("VoluntarID");

                    b.ToTable("VoluntarCategory");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Voluntar", b =>
                {
                    b.HasOne("Herbet_Ioana_ONG.Models.Departament", "Departament")
                        .WithMany("Voluntari")
                        .HasForeignKey("DepartamentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.VoluntarCategory", b =>
                {
                    b.HasOne("Herbet_Ioana_ONG.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbet_Ioana_ONG.Models.Voluntar", "Voluntar")
                        .WithMany("VoluntarCategories")
                        .HasForeignKey("VoluntarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Voluntar");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Category", b =>
                {
                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Departament", b =>
                {
                    b.Navigation("Voluntari");
                });

            modelBuilder.Entity("Herbet_Ioana_ONG.Models.Voluntar", b =>
                {
                    b.Navigation("VoluntarCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
